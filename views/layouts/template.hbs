<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Report Grading System v1.0 - [{{title}}]</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.12.1/font/bootstrap-icons.min.css">

    <!-- Libraries Stylesheet -->
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="css/style.css" rel="stylesheet">
</head>

<body>
    <div class="container-fluid position-relative d-flex p-0">
        <!-- Spinner Start -->
        <div id="spinner" class="show bg-dark position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <!-- Spinner End -->
        <!-- Sidebar Start -->
        <div class="sidebar pe-4 pb-3">
            <nav class="navbar bg-secondary navbar-dark">
                <a href="javascript:void();" class="navbar-brand mx-4 mb-3">
                    <h3 class="text-primary"><i class="fa fa-user-edit me-2"></i>Report<br />Grading<br />System v1.0</h3>
                </a>
                <div class="d-flex align-items-center ms-4 mb-4">
                    <div class="position-relative">
                        {{#if user.is_student}}
                        <img class="rounded-circle" src="{{user.profile_image}}" alt="" style="width: 40px; height: 40px;">
                        {{else}}
                        <img class="rounded-circle" src="img/user.png" alt="" style="width: 40px; height: 40px;">
                        {{/if}}
                        <div class="bg-success rounded-circle border border-2 border-white position-absolute end-0 bottom-0 p-1"></div>
                    </div>
                    <div class="ms-3">
                        <h6 class="mb-0">{{user.first_name}}</h6>
                        {{#if user.is_student}}
                        <span>Student</span>
                        {{else}}
                        <span>Admin</span>
                        {{/if}}
                    </div>
                </div>
                <div class="navbar-nav w-100">
                    <a href="/dashboard" class="nav-item nav-link active"><i class="fa fa-tachometer-alt me-2"></i>Dashboard</a>
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown"><i class="far fa-file-alt me-2"></i>Pages</a>
                        <div class="dropdown-menu bg-transparent border-0">
                            {{#if user.is_student}}
                            <a href="/periodic-ratings" class="dropdown-item">Periodic Ratings</a>
                            {{else}}
                            <a href="/students" class="dropdown-item">Students</a>
                            <a href="/subjects" class="dropdown-item">Subjects</a>
                            <a href="/periodic-ratings" class="dropdown-item">Periodic Ratings</a>
                            {{/if}}
                        </div>
                    </div>
                </div>
            </nav>
        </div>
        <!-- Sidebar End -->
        <!-- Content Start -->
        <div class="content">
            <!-- Navbar Start -->
            <nav class="navbar navbar-expand bg-secondary navbar-dark sticky-top px-4 py-0">
                <a href="index.html" class="navbar-brand d-flex d-lg-none me-4">
                    <h2 class="text-primary mb-0"><i class="fa fa-user-edit"></i></h2>
                </a>
                <a href="#" class="sidebar-toggler flex-shrink-0">
                    <i class="fa fa-bars"></i>
                </a>
                <div class="navbar-nav align-items-center ms-auto">
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                            {{#if user.is_student}}
                            <img class="rounded-circle me-lg-2" src="{{user.profile_image}}" alt="" style="width: 40px; height: 40px;">
                            {{else}}
                            <img class="rounded-circle me-lg-2" src="img/user.png" alt="" style="width: 40px; height: 40px;">
                            {{/if}}
                            <span class="d-none d-lg-inline-flex">{{user.first_name}}</span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end bg-secondary border-0 rounded-0 rounded-bottom m-0">
                            <a href="/logout" class="dropdown-item">Log Out</a>
                        </div>
                    </div>
                </div>
            </nav>
            <!-- Navbar End -->
            <!-- Grid Start  -->
            {{{body}}}
            <!-- Grid End  -->
            <!-- Footer Start -->
            <div class="container-fluid pt-4 px-4">
                <div class="bg-secondary rounded-top p-4">
                    <div class="row">
                        <div class="col-12 col-sm-6 text-center text-sm-start">
                            &copy; <a href="javascript:void(0);">Report Grading System v1.0</a>, All Right Reserved.
                        </div>
                    </div>
                </div>
            </div>
            <!-- Footer End -->
        </div>
        <!-- Content End -->
        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="lib/chart/chart.min.js"></script>
    <script src="lib/easing/easing.min.js"></script>
    <script src="lib/waypoints/waypoints.min.js"></script>
    <script src="lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="lib/tempusdominus/js/moment.min.js"></script>
    <script src="lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>

    <!-- Template Javascript -->
    <script src="js/main.js"></script>
  <script>
          $(document).ready(function() {
              function createHighestGradePerSubject()
              {
                 if (document.getElementById('bar-chart'))
                 {
                  const chartData = {{{grades}}};

                  chartData.datasets.forEach(dataset => {
                    dataset.backgroundColor = getRandomColor();
                  });

                  const ctx = document.getElementById('bar-chart').getContext('2d');

                  new Chart(ctx, {
                    type: 'bar',
                    data: chartData,
                    options: {
                      responsive: true,
                      plugins: {
                        title: {
                          display: true,
                          text: 'Highest Grades Per Quarter For Each Subject',
                          font: {
                            family: 'Montserrat',
                            size: 22,
                            weight: 'bold'
                          }
                        },
                        tooltip: {
                          callbacks: {
                            label: function(context) {
                              const subject = context.chart.data.labels[context.dataIndex];
                              const quarter = context.dataset.label;
                              const value = context.raw;
                              return `${quarter} | ${subject}: ${value}`;
                            }
                          },
                          titleFont: {
                              family: 'Montserrat',
                              size: 18,
                              weight: 'bold'
                          },
                          bodyFont: {
                              family: 'Montserrat',
                              size: 16,
                              weight: 'normal'
                          }
                        },
                        legend: {
                          labels: {
                            font: {
                              family: 'Montserrat',
                              size: 14
                            }
                          }
                        }
                      },
                      scales: {
                        x: {
                          stacked: true,
                          ticks: {
                            font: {
                              family: 'Montserrat',
                              size: 12
                            }
                          }
                        },
                        y: {
                          stacked: true,
                          beginAtZero: true,
                          ticks: {
                            font: {
                              family: 'Montserrat',
                              size: 12
                            }
                          }
                        }
                      }
                    }
                  });
                }
              }

              function createGwaPerStudent()
              {
                if (document.getElementById('line-chart'))
                {
                  const ctx = document.getElementById('line-chart').getContext('2d');
                  const students = {{{chart}}};
  
                  const datasets = students.map(student => ({
                    label: student.studentName.first_name + " " + student.studentName.last_name,
                    data: [
                      student.quarter1,
                      student.quarter2,
                      student.quarter3,
                      student.quarter4
                    ],
                    fill: false,
                    borderColor: getRandomColor(),
                    tension: 0.4,
                    pointBackgroundColor: 'white',
                    pointBorderColor: 'black',
                    pointHoverRadius: 6,
                    pointRadius: 4,
                    borderWidth: 2
                  }));
  
                  new Chart(ctx, {
                  type: 'line',
                  data: {
                    labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],
                    datasets: datasets
                  },
                  options: {
                    responsive: true,
                    plugins: {
                      title: {
                        display: true,
                        text: 'General Weighted Average Per Student',
                        font: {
                          family: 'Montserrat',
                          size: 22,
                          weight: 'bold'
                        }
                      },
                      tooltip: {
                          titleFont: {
                            family: 'Montserrat',
                            size: 18,
                            weight: 'bold'
                          },
                          bodyFont: {
                            family: 'Montserrat',
                            size: 16,
                            weight: 'normal'
                          }
                      },
                      legend: {
                        labels: {
                          font: {
                            family: 'Montserrat',
                            size: 14
                          }
                        }
                      }
                    },
                    scales: {
                      x: {
                        ticks: {
                          font: {
                            family: 'Montserrat',
                            size: 14
                          }
                        }
                      },
                      y: {
                        beginAtZero: true,
                        ticks: {
                          font: {
                            family: 'Montserrat',
                            size: 14
                          }
                        }
                      }
                    }
                  }
                });
                }
              }

              function createGradesPerQuarter()
              {
                if (document.getElementById('bar-chart'))
                {
                  const subjects = {{{chart}}};
  
                  const labels = subjects.map(item => item.label);
                  const quarter1 = subjects.map(item => item.quarter1);
                  const quarter2 = subjects.map(item => item.quarter2);
                  const quarter3 = subjects.map(item => item.quarter3);
                  const quarter4 = subjects.map(item => item.quarter4);
  
                  const ctx = document.getElementById('bar-chart').getContext('2d');
                      new Chart(ctx, {
                      type: 'bar',
                      data: {
                        labels: labels,
                        datasets: [
                          {
                            label: 'Quarter 1',
                            data: quarter1,
                            backgroundColor: getRandomColor()
                          },
                          {
                            label: 'Quarter 2',
                            data: quarter2,
                            backgroundColor: getRandomColor()
                          },
                          {
                            label: 'Quarter 3',
                            data: quarter3,
                            backgroundColor: getRandomColor()
                          },
                          {
                            label: 'Quarter 4',
                            data: quarter4,
                            backgroundColor: getRandomColor()
                          }
                        ]
                      },
                      options: {
                        scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                              font: {
                                family: 'Montserrat',
                                size: 14, 
                                weight: 'bold'
                              }
                            }
                          },
                          x: {
                            ticks: {
                              font: {
                                family: 'Montserrat',
                                size: 14,
                                weight: 'bold'
                              }
                            }
                          }
                        },
                          plugins: {
                              tooltip: {
                                  callbacks: {
                                    label: function(context) {
                                      return context.dataset.label + ': ' + context.formattedValue;
                                    }
                                  },
                                  titleFont: {
                                    family: 'Montserrat',
                                    size: 18,
                                    weight: 'bold'
                                  },
                                  bodyFont: {
                                    family: 'Montserrat',
                                    size: 16,
                                    weight: 'normal'
                                  }
                                },
                            legend: {
                              labels: {
                                font: {
                                  family: 'Montserrat',
                                  size: 16,
                                  weight: 'bold'
                                }
                              },
                            generateLabels: function(chart) {
                                const original = Chart.overrides.bar.plugins.legend.labels.generateLabels;
                                const labels = original(chart);
                                labels.forEach(label => {
                                  label.font = {
                                    family: 'Montserrat',
                                    size: label.hidden ? 14 : 18,
                                    weight: label.hidden ? 'normal' : 'bold'
                                  };
                                });
                                return labels;
                              }
                            },
                            title: {
                              display: true,
                              text: 'Grades Per Quarter',
                              font: {
                                family: 'Montserrat',
                                size: 18,
                                weight: 'bold'
                              }
                            }
                          }
                      }
                    });
                }
              }

              function createGradesPerSubject()
              {
                if (document.getElementById('line-chart'))
                {
                  const subjects = {{{chart}}};
                  const ctx = document.getElementById('line-chart').getContext('2d');
  
                  const datasets = subjects.map(subject => ({
                    label: subject.label,
                    data: [
                      subject.quarter1,
                      subject.quarter2,
                      subject.quarter3,
                      subject.quarter4
                    ],
                    fill: false,
                    borderColor: getRandomColor(),
                    tension: 0.4,
                    pointBackgroundColor: 'white',
                    pointBorderColor: 'black',
                    pointHoverRadius: 6,
                    pointRadius: 4,
                    borderWidth: 2
                  }));
  
                  new Chart(ctx, {
                  type: 'line',
                  data: {
                    labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],
                    datasets: datasets
                  },
                  options: {
                    responsive: true,
                    plugins: {
                      title: {
                        display: true,
                        text: 'Grades Per Subject',
                        font: {
                          family: 'Montserrat',
                          size: 18,
                          weight: 'bold'
                        }
                      },
                        tooltip: {
                            callbacks: {
                              label: function(context) {
                                return context.dataset.label + ': ' + context.formattedValue;
                              }
                            },
                            titleFont: {
                              family: 'Montserrat',
                              size: 18,
                              weight: 'bold'
                            },
                            bodyFont: {
                              family: 'Montserrat',
                              size: 16,
                              weight: 'bold'
                            }
                          },
                      legend: {
                        labels: {
                          font: {
                            family: 'Montserrat',
                            size: 14,
                            weight: 'bold'
                          }
                        }
                      }
                    },
                    scales: {
                      x: {
                        ticks: {
                          font: {
                            family: 'Montserrat',
                            size: 14,
                            weight: 'bold'
                          }
                        }
                      },
                      y: {
                        beginAtZero: true,
                        ticks: {
                          font: {
                            family: 'Montserrat',
                            size: 14,
                            weight: 'bold'
                          }
                        }
                      }
                    }
                  }
                });
                }
              }

              function createCharts()
              {
                  let isStudent = {{user.is_student}};
                  if(isStudent)
                  {
                      createGradesPerQuarter();
                      createGradesPerSubject()
                  }
                  else
                  {
                      createGwaPerStudent();
                      createHighestGradePerSubject();
                  }
              }

              function getRandomColor(alpha = 0.7) {
                const r = Math.floor(Math.random() * 255);
                const g = Math.floor(Math.random() * 255);
                const b = Math.floor(Math.random() * 255);
                return `rgba(${r}, ${g}, ${b}, ${alpha})`;
              }

              createCharts();
          });
  </script>
</body>
</html>